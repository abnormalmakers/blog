django ajax的post请求 csrftoken问题：
    1.在发起ajax请求的页面中藏个input，value值{{csrf_token}}
    2.发起ajax时，设置请求头 headers:{ "X-CSRFtoken":$('#csrftoken').val()},


2.提取多个应用到apps
    第一步 新建一个文件夹 apps

    第二步将所有的app拖到apps中，会提示勾选Search for references ，把这个勾去掉

    第三步选中apps文件夹，右键Make Directory As -> Resoure Root

    第四步 在setting.py 中添加 sys.path.insert(0,os.path.join(BASE_DIR,”apps”))
    这样的话就把apps添加进去了，在命令行运行也不会报错


3.共用模板 include with
    header
    footer
    https://www.cnblogs.com/zf-l/p/django-include.html


4. ssl：certificate_verify_failed
    产生这个问题的原因在于python本身，pyhon升级到2.7.9以后，引入了一个新特性，当使用urllib打开https的链接时，会检验一次ssl证书。
    而当目标网站使用的是自签名证书时，就会抛出urllib2.URLError的错误。（这里虚拟机就是用的自带的签名证书，
    所以我们从服务器连接vmware时会出现这种错误）。

        那么，解决方案如下两种方式：

        1.全局取消证书验证（当项目对安全性问题不太重视时，推荐使用，可以全局取消证书的验证，简易方便）
        (我在django的项目初始化文件例直接取消)
            import ssl
            ssl._create_default_https_context = ssl._create_unverified_context


        2.使用ssl创建未验证的上下文，在url中传入上下文参数（当项目整体非常重视安全问题时，推荐这种方式，可以局部取消证书验证）
            import ssl
            context = ssl._create_unverified_context()
            将context传入url函数的context参数中，比如

            urllib2.urlopen（'目标网址'，context=context）.read()
            这样就解决了ssl：certificate_verify_failed这个问题，成功运行脚本

5.密码加密:
    前端首先对密码进行sha256加密
    后端获取加密后的密码，对其进行加盐加密


6.二次验证：密码，手机号，表单


7.personal
    博客list页面使用分页
    博客详情页使用ajax动态加载详情


8.写博客 弹窗 or 页面？




9.ajax tranditional参数
    默认的话，traditional为false，即jquery会深度序列化参数对象，以适应如PHP和Ruby on Rails框架，
    但servelt api无法处理，我们可以通过设置traditional 为true阻止深度序列化，然后序列化结果如下：
    p: ["123", "456", "789"]    =>    p=123&p=456&p=456

10.django request
    request.POST.getlist    接受传递过来的数组
    前端ajax请求必须加上trandition:true属性


11.在Django保证数据库的原子操作
    from django.db import transaction
        tyr:
            with transaction.atomic():
                pass
        except:
            pass


12>Django分页：
    from django.core.paginator import Paginator,PageNotAnInteger,EmptyPage
        p=Paginator(data,number) data:分页数据  number:但也多少条
        contacts=p.page(当前页码)

        contacts.number:当前页码
        p.num_pages:分页总数

        contacts.has_next，contacts.has_previous:返回布尔
            是否有下一页，是否有前一页

        p.page_range   返回 range，即当前分页范围 range(1,n)


    1 2 3 4 5 ... 10
    1 ... 2 3 4 5 6 ... 10
    1 ... 6 7 8 9 10


13 get问号传参 带有特殊字符后台获取为空 eg:（+）


14.js获取url
    url=window.location.href

15.修改django中models的defalut
    1.注释掉该字段，生成中间文件并同步到数据库
    2.撤销注释，重新同步到数据库

16.django中的连接查询 筛选
    1对多：
        a=A.objects.get(id=1)
        b=a.b_set.all()   选出对应所有
        b=a.b_set.filter(query)   选出符合条件的